Code Review Preparation and Framing
1. Background and context
What information about your project does the audience need to participate fully in the technical review? You should share enough to make sure your audience understands the questions you are asking, but without going into unnecessary detail.
	We are creating a game that simulates evolution due to natural selection. The player manipulates how the species evolves by changing the environment surrounding the organism. Each organism has certain vital stats that determine its ability to survive (or not survive) in the environment. The game’s goal will be to evolve the organism to a particular set of stats (this goal is subject to change). We are also considering adding multiple species to include effects such as coevolution.
	We are using pygame and the model/view/controller architecture. We are also possibly including matlab for python and DEAP for the evolutionary algorithm and the ability to display graphs of the stats of populations.
	Currently we are working on structuring the different elements of the code to run as smoothly as possible. The different elements include the code for the main, bug, rawr, nom, and environment. 
	We’re also working on balancing the interactions between the different species and the environment to best show the interactions and the resulting evolutionary section of the main species (the bugs).
	Our next order of business is the user interaction and interface. We plan on making the environment and also possibly the bugs drag and droppable.

2. Key questions
What do you want to learn from the review? What are the most important decisions your team is currently contemplating? Where might an outside perspective be most helpful? As you select key questions to ask during the review, bear in mind both the time limitations and background of your audience.

We would like some general feedback on how we are doing both on the coding front and the design front. Because this is a game where user interface is such an important component we want feedback on whether our implementation makes the game compelling and interesting. It is also important that our code runs smoothly and consistently no matter what the user does and so we want a sound structure for the game. Our questions aim to get our code and user interface in that direction as much as possible.

Questions:
1. What interactions do you want?
2. What is the best way to make it drag and droppable
3. Is it better to have really small environment icons, a tab system or a scrollable sidebar
4. We’d like a scrollbar, any ideas on how to implement that
5. Suggestions to improve the way our code is structured or runs?

1. Agenda for technical review session
Be specific about how you plan to use your allotted time. What strategies will you use to communicate with your audience?
25 minutes total
5 min presentation of code structure
7 min discussion of code structure
5 min presentation of user interface/environment
7 min discussion of user interface/environment
Strategies:
Interactive on the whiteboard even during initial presentation
Have one of our team members taking notes on feedback we receive, maybe on a computer



